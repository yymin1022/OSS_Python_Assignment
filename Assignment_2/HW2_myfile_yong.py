# hw2_myfile.py
#
# 이 파일에 적혀 있는 각 함수 정의들을 완성하는 것이 이번 과제의 목표입니다.
# 과제 설명서, 그리고 이 코드에 주석으로 달아 둔 TODO: 부분들을 참고하여 과제를 진행해 주세요.
#
# 주의할 점:
#   - 두 이름 mystat, duel은 절대 바꾸면 안 돼요!
#   - 함수 duel()에 대한 함수 정의 밖에 새로운 문장을 추가하면 안 돼요!
#   - import문을 사용하면 안 돼요!
#   - 이 .py 파일 내용을 고친 다음에는 꼭 Ctrl + S를 눌러 저장해 주세요.
#   - 테스트를 진행하려면 (저장한 다음) hw2_tester.py를 열고 F5를 눌러야 해요!


# '내 캐릭터'의 능력치입니다.
# 프로그래머인 여러분이 직접 literal을 적어 가며 정해야 해요.
# 각 칸의 의미 및 규칙에 대해서는 과제 설명서의 '대결 규칙' 문단을 참고해 주세요.
#
# TODO:
# 새 list의 각 자리에 들어갈 값을, 규칙을 준수하는 선에서,
# literal을 적어 가며 자유롭게 정해 주세요.
mystat = ['Untitled', 0, 100, 0, 0, 0, 0 ]


# 함수 duel()은 인수로 받은 두 캐릭터의 우열을 가리는 함수입니다.
# 0등상을 위한 '평가 기준'을 여기서 세운다고 생각해도 좋을 것 같아요.
# 아무튼 이 함수 정의를 여러분 입맛에 맞게 적는 것이 이번 과제의 주 목표입니다!
#
# TODO:
# 여러분의 캐릭터가 가장 우월한 캐릭터로 인정받을 수 있도록,
# 아래 규칙에 맞게 값을 return하도록 함수 내용물을 구성해 주세요:
#     left가 더 우월한 경우 음수(예: -1)를 return해야 합니다.
#     right가 더 우월한 경우 양수(예: 1)를 return해야 합니다.
#
# 이번 과제의 모든 캐릭터는 이름-능력치 조합이 모두 다르므로 '무승부'는 생각하지 않아도 됩니다.
# 거꾸로 말하면, 두 캐릭터의 능력치가 똑같다면 이름 값을 다루어서라도 우열을 가려야만 합니다.
# -> 단, 두 캐릭터의 능력치가 다를 때는 (이름은 무시하고) 능력치만 가지고 우열을 가려야 해요.
#
# 여러분의 캐릭터는 left 자리에 있을 수도, right 자리에 있을 수도 있습니다.
# 테스트 실행 결과를 참고하면서 '누가 와도 무조건 내 캐릭터가 0등을 할 수 있도록'
# 꼼꼼하되 매우 편파적인 평가 기준을 세워 주세요!
#
def duel(left, right):
    # 아직 이 함수 정의 내용물은 위에 적어 둔 목표에 맞게 적혀 있지 않으므로
    # 지금 tester 프로그램을 실행하면 테스트에 실패하는 게 정상이에요.
    
    # 과제를 시작했으면 아래의 문장은 지워도 괜찮아요.
    return 3

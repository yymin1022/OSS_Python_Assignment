# hw3_mymodule_yong.py
#
# 핵심 주의사항:
#     - import문, print() 호출식, input() 호출식이 들어 있으면 '무조건' 0점으로 간주돼요.
#       특히 import문을 적을 수 없다는 점을 꼭 유의해 주세요.
#
#     - Python interpreter, 운영체제, 컴퓨터를 공격하려는 '명백한' 시도가 발견되면 0점이 되고 강사의 전화 연락을 받게 될 거예요.
#
#     - 능력치가 같은 캐릭터들은 반드시 '이웃 순위'에 위치하도록 만들어야 해요.
#       (3등, 5등이 능력치가 같은데 사이에 낀 4등이 다르거나 하면 안 돼요)
#       능력치가 같을 때만 이름을 고려하도록 실행 흐름을 구성하면 이 규칙은 걱정 안 해도 돼요.
#
#     - 이번 과제는 제출 가능! 메시지를 보는 것이 좀 어려울 수 있어요. 미리 종이에 적거나 그려 가며 생각해 보고 오는 것을 권장해요.
#       그렇게 해도 몇몇 국면에서는 실패를 겪을 수밖에 없도록 강사가 의도해 놨는데,
#       그 때 미리 적어 둔 종이 내용이 없다면 자칫 전체 코드를 다 다시 짜는 불상사가 생길 수 있어요.
#       (강사도 core 모듈 내용 적을 때 종이에 노트해 가며 진행했어요. 이건 스킬이지 부끄러운 일이 아니에요)



# TODO#2: 파일 이름 바꾸고 왔나요? 파일 이름이 겹치면 곤란하니 지금 바꾸고 와요.
#         TODO#3은 hw3_core.py의 맨 윗 부분에 적혀 있어요.
#         (TODO 주석들은 그 내용을 모두 완료했다면 지워도 좋아요)


def duel(left, right):
    # TODO#5: 이 아래에는 '이름이 빠른 캐릭터가 승리' 방식으로 판정하는 하는 수식이 적혀 있어요. 살짝 구경해 봐요.
    #
    # TODO#6: core 모듈로 가서 F5를 눌러 테스트를 진행해 보고 돌아와 주세요.
    #
    # TODO#7: 일단 과제 설명서의 '대결 목표 및 규칙' 부분을 읽어 보고,
    #         아래 내용을 미리 종이에 적거나 그려 본 다음 돌아와요:
    #         - 내 duel()이 어떤 부류의 캐릭터를 어떤 순위권에 둘 것인지(예: 정확히 나와 동일한 능력치를 가진 캐릭터를 최상위권에)
    #         - 각 부류별 특징을 어떻게 감지할 것이며, 그 부류 안에 속한 캐릭터들 사이의 순위는 어떻게 정할 것인지
    #         - duel()의 순차 흐름을 구성할 때 각 부류를 다룰 순서(동시에 두 부류에 속하는 캐릭터가 존재한다면 이 순서에 영향을 받게 돼요)
    #
    # TODO#8: 위에서 완성한 종이를 보고 전체 실행 흐름 및 분기별 세부 목표가 눈에 들어온다면
    #         이제 이 함수의 내용을 조곤조곤 채워 넣을 준비가 다 되었어요.
    #         이 파일 및 과제 설명서에 있는 주의사항들을 수시로 확인하며 본격적으로 과제를 시작해 봅시다!
    return (right[0] < left[0]) * 2 - 1
